<<<<<<< HEAD
var os = require('os')
var stats = require('./lib/stats')

var wrapper = function (statType) {
  return function (pid, options, cb) {
    if (typeof options === 'function') {
      cb = options
      options = {}
    }

    return stats[statType](pid, options, cb)
  }
}

var pusage = {
  darwin: wrapper('ps'),
  sunos: wrapper('ps'),
  freebsd: wrapper('ps'),
  netbsd: wrapper('proc'),
  win: wrapper('win'),
  linux: wrapper('proc'),
  aix: wrapper('ps'),
  unsupported: function (pid, options, cb) {
    cb = typeof options === 'function' ? options : cb

    cb(new Error(os.platform() + ' is not supported yet, please fire an issue (https://github.com/soyuka/pidusage)'))
  }
}

var platform = os.platform()
platform = platform.match(/^win/) ? 'win' : platform // nor is windows a winner...
platform = pusage[platform] ? platform : 'unsupported'

exports.stat = function () {
  pusage[platform].apply(stats, [].slice.call(arguments))
}

exports.unmonitor = function (pid) {
  delete stats.history[pid]
}

exports._history = stats.history
=======
'use strict'

const stats = require('./lib/stats')

/**
 * Get pid informations.
 * @public
 * @param  {Number|Number[]|String|String[]} pids A pid or a list of pids.
 * @param  {Object} [options={}] Options object
 * @param  {Function} [callback=undefined] Called when the statistics are ready.
 * If not provided a promise is returned instead.
 * @returns  {Promise.<Object>} Only when the callback is not provided.
 */
function pidusage (pids, options, callback) {
  if (typeof options === 'function') {
    callback = options
    options = {}
  }

  if (options === undefined) {
    options = {}
  }

  options = Object.assign({
    usePs: /^true$/i.test(process.env.PIDUSAGE_USE_PS),
    maxage: process.env.PIDUSAGE_MAXAGE
  }, options)

  if (typeof callback === 'function') {
    stats(pids, options, callback)
    return
  }

  return new Promise(function (resolve, reject) {
    stats(pids, options, function (err, data) {
      if (err) return reject(err)
      resolve(data)
    })
  })
}

module.exports = pidusage
module.exports.clear = require('./lib/history').clear
>>>>>>> e5104e971a6962095ce110e1d0623ecc02dfc1ea
